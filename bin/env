#!/bin/bash

export APP_NAME=${APP_NAME:-"Hello Boilerplate"}
export NODE_ENV=${NODE_ENV:-"development"}
export APP_NODE_ALIAS=${APP_NODE_ALIAS:-"current"}

## Get the absolute directory regardless from where you are calling the script.
## Make sure to prepend $APP_ROOTPATH whenever you can so you are absolutly sure that
## the correct path gets used.
export APP_ROOTPATH="$(cd $(dirname $(cd $(dirname $0);pwd -P));pwd -P)"
export APP_CONFPATH="$APP_ROOTPATH/config"
export APP_CONFFILE="$APP_CONFPATH/app.json"
export APP_VARPATH="$APP_ROOTPATH/var"
export APP_RUNPATH="$APP_VARPATH/run"
export APP_OPTPATH="$APP_VARPATH/opt"
export APP_TMPPATH="$APP_VARPATH/tmp"
export APP_LOGPATH="$APP_VARPATH/log"
export APP_DATAPATH="$APP_VARPATH/data"
export APP_LIBPATH="$APP_VARPATH/lib"
export APP_BINPATH="$APP_ROOTPATH/bin"
export APP_HOMEPATH="$APP_ROOTPATH/app"

## NPM related stuff
export APP_NPM_ROOTPATH="$APP_OPTPATH/npm"
export APP_NPM_BINPATH="$APP_NPM_ROOTPATH/bin"
export APP_NPM_INSTALLSCRIPT="https://npmjs.org/install.sh"
export npm_config_prefix="$APP_NPM_ROOTPATH"
export npm_config_globalconfig="$APP_CONFPATH/npmrc"
export npm_config_globalignorefile="$APP_CONFPATH/npmignore"
export npm_config_userignorefile="$APP_HOMEPATH/.npmignore"
export npm_config_userconfig="$APP_HOMEPATH/npmrc"
export npm_config_init_module="$APP_HOMEPATH/npm-init.js"
export npm_config_cache="$APP_NPM_ROOTPATH/cache"
export npm_config_tmp="$APP_TMPPATH"

## NVM related stuff
export APP_NVM_ROOTPATH="$APP_OPTPATH/nvm"
APP_NVM_GITURL="https://github.com/thomasfr/nvm.git"
export NVM_DIR="$APP_NVM_ROOTPATH"

export NODE_PATH="$APP_NPM_ROOTPATH/lib/node_modules"
export PATH="$APP_BINPATH:$APP_NPM_BINPATH:$PATH"

app_init() {
    mkdir -p \
        $APP_TMPPATH \
        $APP_RUNPATH \
        $APP_LOGPATH \
        $APP_DATAPATH \
        $APP_OPTPATH &> /dev/null

    if [[ ! -d $APP_NPM_ROOTPATH ]]; then
        echo "* Installing npm"
        echo
        mkdir -p $APP_NPM_ROOTPATH
        curl $APP_NPM_INSTALLSCRIPT -o "$APP_NPM_ROOTPATH/install.sh"
        chmod +x "$APP_NPM_ROOTPATH/install.sh"
        $APP_NPM_ROOTPATH/install.sh
        echo
        echo "* npm install complete"
    fi

    if [[ ! -d $APP_NVM_ROOTPATH ]]; then
        echo "* Installing nvm"
        git submodule add $APP_NVM_GITURL $APP_NVM_ROOTPATH
        echo "* nvm install complete"
    fi

    CURRENT_NODE="$($APP_NVM_ROOTPATH/nvm which $APP_NODE_ALIAS)"
    echo "CURRENTNODE $CURRENT_NODE"
    if [[ $? -eq 0 ]]; then
        cd $APP_BINPATH
        ln -sf $CURRENT_NODE "node"
        cd $APP_ROOTPATH
    fi

    CURRENT_NODE="$(which node)"

    if [ "${CURRENT_NODE##$APP_ROOTPATH}" = "$CURRENT_NODE" ]; then
          echo "[WARN] Used node '$CURRENT_NODE' not within '$APP_ROOTPATH'"
    fi

    unset CURRENT_NODE
}
app_init


