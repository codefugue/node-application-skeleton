#!/bin/bash
#set -x

APP_HOME="$(cd $(dirname $(cd $(dirname $0);pwd -P));pwd -P)"
cd $APP_HOME;

APP_BIN="$APP_HOME/bin"
APP_CONF="$APP_HOME/etc"
APP_TMP="$APP_HOME/tmp"
APP_PLATFORM="$(uname -s)"
APP_REALBIN="$APP_BIN/${APP_PLATFORM}-${HOSTTYPE}"
APP_NODEMODULESBIN="$APP_HOME/node_modules/.bin"
APP_PATH="$APP_BIN:$APP_NODEMODULESBIN:$PATH"
APP_ENV="development"
APP_MAIN="$APP_HOME/index.js"
APP_INSTALL="$APP_HOME/lib/install.js"

NPM_INSTALL_ENV="npm_config_cache=$APP_HOME/.npm npm_config_tmp=$APP_TMP npm_config_prefix=$APP_HOME npm_config_init_module=$APP_HOME/.npm-init.js npm_config_userconfig=$APP_HOME/.npmrc npm_config_globalconfig=$APP_HOME/etc/npmrc npm_config_userignorefile=$APP_HOME/.npmignore npm_config_globalignorefile=$APP_HOME/etc/npmignore"

## We change the PATH to the one defined inside this script. Add all PATHs you need
## We also add a APP_HOME ENV and the more widely use NODE_ENV (expressjs, etc.)
ENV="/usr/bin/env PATH=$APP_PATH APP_HOME=$APP_HOME APP_CONF=$APP_CONF NODE_ENV=$APP_ENV"

## Create symlinks from ./bin/ to the correct binaries of your app
## Once you called the script, all binaries of the correct platform
## and bitness are callable in APP_BIN
if [[ -d "$APP_BIN" && -r "$APP_BIN" ]]; then
	cd $APP_BIN;
	if [[ -d "$APP_REALBIN"  && -r "$APP_REALBIN" && "$(ls -A $APP_REALBIN)" ]];then
		ln -sf $APP_REALBIN/* ./;
	fi
  if [[ -d "$APP_NODEMODULESBIN"  && -r "$APP_NODEMODULESBIN" && "$(ls -A $APP_NODEMODULESBIN)" ]];then
    ln -sf $APP_NODEMODULESBIN/* ./; 
  fi
  cd $APP_HOME
fi;

## Display Usage Information 
usage() {
	cat << EOF
usage: $0 command [options]

This is the usage description of your app.

OPTIONS:
   -h      Show this message
   -f      Set the FOO Env
   -v      Verbose
EOF
}

## We suppose the first argument is a command 
## identifier like 'start', 'stop', ...
COMMAND="$1"
shift

FOO=
VERBOSE=
while getopts “hf:v” OPTION
do
	case $OPTION in
		h)
			usage
			exit 1
			;;
		f)
			FOO=$OPTARG
			;;
		v)
			VERBOSE=1
			;;
		?)
			usage
			exit
			;;
	esac
done

## Check for all your mandatory arguments here.
## At least a command has to be set so we check that here.
if [[ -z $COMMAND ]] #|| [[ -z $TEST ]] || [[ -z $SERVER ]] || [[ -z $PASSWD ]]
then
	usage
	exit 1
fi

## Decide what to do depending on the command:

## 'install' command parses all config files found in 
## APP_CONF with mustache and passing all ENV vars
## and arguments to them.
if [[ $COMMAND == "install" ]]; then
	$ENV curl "http://npmjs.org/install.sh" > "$APP_TMP/install.sh"
	chmod 755 "$APP_TMP/install.sh"
  $ENV $NPM_INSTALL_ENV "$APP_TMP/install.sh"
	rm -f "$APP_TMP/install.sh"
	exit 0

elif [[ $COMMAND == "setup" ]]; then
	$ENV node $APP_INSTALL
	exit 0

elif [[ $COMMAND == "npm" ]]; then
	$ENV $APP_HOME/bin/npm "$@"
	exit 0

## 'usage' shows usage information
elif [[ $COMMAND == "usage" ]]; then
	usage
	exit 1

## Just an example call to APP_MAIN
else
	$ENV node $APP_MAIN "$@"
	if [[ $? -gt 0 ]]; then
		usage
		exit 1
	else
		exit 0
	fi
fi

exit 1
